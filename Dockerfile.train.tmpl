# Please refer to the TRAINING documentation, "Basic Dockerfile for training"

FROM nvcr.io/nvidia/tensorflow:20.03-tf1-py3
ARG DEBIAN_FRONTEND=noninteractive

ENV DEEPSPEECH_REPO=#DEEPSPEECH_REPO#
ENV DEEPSPEECH_SHA=188a6f2c1ee53dc79acf8abceaf729b5f9a05e7a

RUN apt-get update && apt-get install -y --no-install-recommends \
        apt-utils \
        bash-completion \
        build-essential \
        curl \
        git \
        git-lfs \
        libbz2-dev \
        locales \
        python3-venv \
        unzip \
        wget

# We need to remove it because it's breaking deepspeech install later with
# weird errors about setuptools
RUN apt-get purge -y python3-xdg

# Install dependencies for audio augmentation
RUN apt-get install -y --no-install-recommends libopus0 libsndfile1

WORKDIR /
RUN wget https://github.com/mozilla/DeepSpeech/archive/${DEEPSPEECH_SHA}.zip && \
    unzip ${DEEPSPEECH_SHA}.zip && \
    mv DeepSpeech-${DEEPSPEECH_SHA} DeepSpeech && \
    rm -rf ${DEEPSPEECH_SHA}.zip

WORKDIR /DeepSpeech

## Build CTC decoder first, to avoid clashes on incompatible versions upgrades
#RUN cd native_client/ctcdecode && make NUM_PROCESSES=$(nproc) bindings
#RUN pip3 install --upgrade native_client/ctcdecode/dist/*.whl

# Prepare deps
RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install --upgrade pip==20.0.2 wheel==0.34.2 setuptools==46.1.3

# Install DeepSpeech
#  - There is already correct TensorFlow GPU installed on the base image,
#    we don't want to break that
RUN DS_NOTENSORFLOW=y python3 -m pip install --upgrade -e .

# Tool to convert output graph for inference
RUN python3 util/taskcluster.py --source tensorflow --branch r1.15 \
        --artifact convert_graphdef_memmapped_format  --target .
RUN chmod +x convert_graphdef_memmapped_format

# Build KenLM to generate new scorers
WORKDIR /DeepSpeech/native_client
RUN rm -rf kenlm && \
	git clone https://github.com/kpu/kenlm && \
	cd kenlm && \
	git checkout 87e85e66c99ceff1fab2500a7c60c01da7315eec && \
	mkdir -p build && \
	cd build && \
	cmake .. && \
	make -j $(nproc)
WORKDIR /DeepSpeech/

RUN ./bin/run-ldc93s1.sh
